# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          cd $GITHUB_WORKSPACE
          ls
          echo -- Unpacking db-data ...
          tar xfz db-data.tar.gz
          rm db-data.tar.gz
          echo -- db-data unpacked.
          ls
          cd shared/eln/
          ls
          echo -- Unpacking app.tar.gz
          tar xfz app.tar.gz
          rm app.tar.gz
          echo -- app.tar.gz unpacked.
          echo -- Unpacking config.tar.gz
          tar xfz config.tar.gz
          rm config.tar.gz
          echo -- config.tar.gz unpacked.
          echo -- Unpacking log.tar.gz
          tar xfz log.tar.gz
          rm log.tar.gz
          echo -- log.tar.gz unpacked.
          echo -- Unpacking public.tar.gz
          tar xfz public.tar.gz
          rm public.tar.gz
          echo -- public.tar.gz unpacked.
          echo -- Unpacking tmp.tar.gz
          tar xfz tmp.tar.gz
          rm tmp.tar.gz
          echo -- tmp.tar.gz unpacked.
          echo -- Unpacking uploads.tar.gz
          tar xfz uploads.tar.gz
          rm uploads.tar.gz
          echo -- uploads.tar.gz unpacked.
          ls
          cd ../..
          ls
          mkdir -p spectra-shared
          sudo tar cfz ELNdemo.tar.gz db-data docker-compose.yml scripts shared spectra_config.py spectra-shared